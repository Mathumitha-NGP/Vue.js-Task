{"ast":null,"code":"import HelloWorld from '../components/HelloWorld';\nexport default {\n  name: 'HomeView',\n  components: {\n    HelloWorld\n  },\n\n  data() {\n    return {\n      name: '',\n      pswd_length: '',\n      email: '',\n      generatedPassword: '',\n      select: '',\n      rules: {\n        required: value => !!value || 'Required.',\n        counter: value => value.length <= 30 || 'Max 30 characters',\n        email: value => {\n          const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          return pattern.test(value) || 'Invalid e-mail.';\n        },\n        name: value => {\n          const pattern = /^[a-zA-Z\\s]*$/;\n          return pattern.test(value) || 'Invalid name';\n        },\n        Password_length: value => {\n          const pattern = /^([8-9]|1[0-9]|20)*$/;\n          return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters';\n        }\n      },\n      row: '',\n      items: ['Tamil Nadu', 'Andhra', 'Kerala', 'Karnataka'],\n      selected: [''],\n      formData: []\n    };\n  },\n\n  methods: {\n    pswd_generate() {\n      const Allowed = {\n        Uppers: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lowers: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      };\n\n      const randomChar = str => str.charAt(Math.floor(Math.random() * str.length));\n\n      const generate = (length = this.pswd_length) => {\n        let pwd = \"\";\n\n        if (8 <= this.pswd_length && this.pswd_length <= 20) {\n          pwd += randomChar(Allowed.Uppers);\n          pwd += randomChar(Allowed.Lowers);\n          pwd += randomChar(Allowed.Numbers);\n          pwd += randomChar(Allowed.Symbols);\n\n          for (let i = pwd.length; i < length; i++) pwd += randomChar(Object.values(Allowed).join(''));\n\n          this.generatedPassword = pwd;\n        } else {\n          this.generatedPassword = '';\n        }\n      };\n\n      generate();\n    },\n\n    submitdata() {\n      this.formData.push({\n        name: this.name,\n        email: this.email,\n        address: this.select,\n        password_length: this.pswd_generate,\n        generated_password: this.generatedPassword,\n        gender: this.row,\n        hobbies: this.selected\n      });\n    }\n\n  },\n  computed: {\n    enablesubmit() {\n      if (this.name.length == 0 || this.email.length == 0 || this.pswd_length.length == 0 || this.generatedPassword.length == 0 || this.select.length == 0 || this.row == 0 || this.selected == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA6LA;AAEA;EACAA,gBADA;EAGAC;IACAC;EADA,CAHA;;EAMAC;IACA;MACAH,QADA;MAEAI,eAFA;MAGAC,SAHA;MAIAC,qBAJA;MAKAC,UALA;MAOAC;QACAC,yCADA;QAEAC,2DAFA;QAGAL;UACA;UACA;QACA,CANA;QAOAL;UACA;UACA;QACA,CAVA;QAWAW;UACA;UACA;QACA;MAdA,CAPA;MAwBAC,OAxBA;MA0BAC,QACA,YADA,EAEA,QAFA,EAGA,QAHA,EAIA,WAJA,CA1BA;MAiCAC,cAjCA;MAkCAC;IAlCA;EAqCA,CA5CA;;EA8CAC;IACAC;MACA;QACAC,oCADA;QAEAC,oCAFA;QAGAC,qBAHA;QAIAC;MAJA;;MAMA;;MACA;QACA;;QACA;UACAC;UACAA;UACAA;UACAA;;UACA,0CACAA;;UACA;QACA,CARA,MAUA;UACA;QACA;MAEA,CAhBA;;MAiBAC;IACA,CA3BA;;IA6BAC,aACA;MACA;QAEAxB,eAFA;QAGAK,iBAHA;QAIAoB,oBAJA;QAKAC,mCALA;QAMAC,0CANA;QAOAC,gBAPA;QAQAC;MARA;IAWA;;EA1CA,CA9CA;EA0FAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA;;EARA;AA1FA","names":["name","components","HelloWorld","data","pswd_length","email","generatedPassword","select","rules","required","counter","Password_length","row","items","selected","formData","methods","pswd_generate","Uppers","Lowers","Numbers","Symbols","pwd","generate","submitdata","address","password_length","generated_password","gender","hobbies","computed","enablesubmit"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container fluid>\n      <v-row>\n       <v-col class=\"div1\" cols=\"4\">\n            <v-text-field\n              value=\"\"\n              v-model=\"name\"\n              label=\"Name\"\n              counter\n              maxlength=\"30\"\n              :rules=\"[rules.required, rules.name]\"\n              outlined\n            ></v-text-field>\n\n            <v-text-field\n              value=\"\"\n              v-model=\"email\"\n              label=\"Email\"\n              counter\n              maxlength=\"50\"\n              :rules=\"[rules.required, rules.email]\"\n              outlined\n            ></v-text-field>\n          \n          <v-row>\n            <v-col sm=\"9\">\n              <v-combobox\n                v-model=\"select\"\n                :items=\"items\"\n                label=\"Address\"\n                single\n                outlined\n                dense\n                :rules=\"[rules.required]\"\n              ></v-combobox>\n            </v-col>\n          </v-row>\n          \n          <v-row>\n            <v-col sm=\"5\">\n              <v-text-field\n              value=\"\"\n              v-model=\"pswd_length\"\n              label=\"Password size\"\n              :rules=\"[rules.required,rules.Password_length]\"\n              outlined\n              ></v-text-field>\n            </v-col>\n      \n            <v-col>\n              <v-btn @click=\"pswd_generate\"\n                depressed\n                color=\"primary\"\n                >Generate password</v-btn>\n            </v-col>\n          </v-row>\n      \n          \n              <v-text-field\n                value=''\n                v-model=\"generatedPassword\"\n                label=\"Generated Password\"\n                outlined\n                readonly\n                ></v-text-field>\n\n      \n         \n            <label>Gender:</label>\n              <v-radio-group\n                :rules=\"[rules.required]\"\n                v-model=\"row\"\n                row\n                >\n              <v-radio\n                label=\"Male\"\n                color=\"blue\"\n                value=\"Male\"\n              ></v-radio>\n              <v-radio\n                label=\"Female\"\n                color=\"pink lighten-2\"\n                value=\"Female\"\n              ></v-radio>\n              </v-radio-group>\n          \n    \n              \n          <label>Hobbies:</label>\n              <v-row>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Books\"\n                    value=\"Books\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Music\"\n                    value=\"Music\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Sports\"\n                    value=\"Sports\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Movies\"\n                    value=\"Movies\"\n                  ></v-checkbox>\n                </v-col>\n              </v-row>\n            \n          <v-row>\n            <v-col></v-col>\n            <v-col>\n\n              <v-btn @click=\"submitdata\"\n                :disabled=\"enablesubmit\"\n                color=\"green\"\n              >Submit</v-btn>\n            </v-col>\n            <v-col></v-col>\n          </v-row>\n          </v-col>\n\n        \n        <v-col cols=\"auto\">\n          <v-simple-table class=\"table1\">\n              <template v-slot:default>\n                <thead>\n                  <tr>\n                    <th class=\"text-left\">\n                      name\n                    </th>\n                    <th class=\"text-left\">\n                      email\n                    </th>\n                    <th class=\"text-left\">\n                      address\n                    </th>\n                    <th class=\"text-left\">\n                      password_length\n                    </th>\n                    <th class=\"text-left\">\n                      generated_password\n                    </th>\n                    <th class=\"text-left\">\n                      gender\n                    </th>\n                    <th class=\"text-left\">\n                      hobbies\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-for=\"item in formData\"\n                    :key=\"item.email\"\n                  >\n                    <td>{{ item.name }}</td>\n                    <td>{{ item.email }}</td>\n                    <td>{{ item.address }}</td>\n                    <td>{{ item.pswd_length }}</td>\n                    <td>{{ item.generated_password }}</td>\n                    <td>{{ item.gender }}</td>\n                    <td>{{ item.hobbies }}</td>\n                  </tr>\n                </tbody>\n              </template>\n          </v-simple-table>\n    \n          <HelloWorld /> \n        </v-col>\n      </v-row>\n    </v-container>\n  </div> \n</template>\n\n\n<script>\n  import HelloWorld from '../components/HelloWorld'\n\n  export default {\n    name: 'HomeView',\n\n    components: {\n      HelloWorld,\n    },\n    data () {\n      return {\n        name: '',\n        pswd_length: '',\n        email: '',\n        generatedPassword: '',\n        select: '',\n        \n        rules: {\n          required: value => !!value || 'Required.',\n          counter: value => value.length <= 30 || 'Max 30 characters',\n          email: value => {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            return pattern.test(value) || 'Invalid e-mail.'\n          },\n          name: value => {\n            const pattern = /^[a-zA-Z\\s]*$/\n            return pattern.test(value) || 'Invalid name'\n          },\n          Password_length: value => {\n            const pattern = /^([8-9]|1[0-9]|20)*$/\n            return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters'\n          },\n        \n        },\n        row:'',\n        \n        items: [\n          'Tamil Nadu',\n          'Andhra',\n          'Kerala',\n          'Karnataka',\n        ],\n      \n      selected: [''],\n      formData: [],\n          \n      } \n    },\n\n    methods: {\n      pswd_generate() {\n        const Allowed = {\n        Uppers: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lowers: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      }\n      const randomChar = (str) => str.charAt(Math.floor(Math.random() * str.length))\n      const generate = (length=this.pswd_length) => { \n        let pwd = \"\";\n        if(8<=this.pswd_length && this.pswd_length<=20){\n        pwd += randomChar(Allowed.Uppers);\n        pwd += randomChar(Allowed.Lowers); \n        pwd += randomChar(Allowed.Numbers); \n        pwd += randomChar(Allowed.Symbols);\n        for (let i = pwd.length; i < length; i++)\n            pwd += randomChar(Object.values(Allowed).join(''));\n        this.generatedPassword = pwd;\n        }\n        else\n        {\n         this.generatedPassword = ''\n        }\n\n      }\n      generate()\n      },\n\n      submitdata()\n      {\n        this.formData.push( {\n        \n            name:this.name,\n            email:this.email,\n            address:this.select,\n            password_length:this.pswd_generate,\n            generated_password:this.generatedPassword,\n            gender:this.row,\n            hobbies:this.selected\n          \n      })\n    }\n    },\n    computed:{\n      enablesubmit() {\n        if(this.name.length ==0 || this.email.length ==0 || this.pswd_length.length ==0 || this.generatedPassword.length ==0 || this.select.length ==0 || this.row ==0 || this.selected ==0){\n          return true;\n        }\n        else{\n          return false\n          }\n        }\n    }\n  }\n</script>\n\n<style>\n  .div1 {\n    /* width:300px;\n    height:auto; */\n    /* background-color: lightcyan; */\n    /* align-content: center;   */\n    margin:10px;\n    box-sizing: border-box;\n    border: solid black 1px;\n    /* padding: 20px; */\n  }\n\n  .table1 {\n    width:auto;\n    height:auto;\n    /* background-color: lightcyan; */\n    /* align-content: center;   */\n    margin:20px;\n    box-sizing: border-box;\n    border: solid black 1px;\n    padding: 20px;\n  }\n\n\n</style>"]},"metadata":{},"sourceType":"module"}