{"ast":null,"code":"import HelloWorld from '../components/HelloWorld';\nexport default {\n  name: 'HomeView',\n  components: {\n    HelloWorld\n  },\n\n  data() {\n    return {\n      name: '',\n      pswd_length: '',\n      title: 'Preliminary report',\n      email: '',\n      generatedPassword: '',\n      select: '',\n      rules: {\n        required: value => !!value || 'Required.',\n        counter: value => value.length <= 30 || 'Max 30 characters',\n        email: value => {\n          const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          return pattern.test(value) || 'Invalid e-mail.';\n        },\n        name: value => {\n          const pattern = /^[a-zA-Z\\s]*$/;\n          return pattern.test(value) || 'Invalid name';\n        },\n        Password_length: value => {\n          const pattern = /^([8-9]|1[0-9]|20)*$/;\n          return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters';\n        }\n      },\n      row: '',\n      items: ['Tamil Nadu', 'Andhra', 'Kerala', 'Karnataka'],\n      selected: ['']\n    };\n  },\n\n  methods: {\n    pswd_generate() {\n      const Allowed = {\n        Uppercase: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lower: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      };\n\n      const randomChar = str => str.charAt(Math.floor(Math.random() * str.length));\n\n      const generate = length => {\n        let pwd = \"\";\n\n        if (8 <= this.pwd_length && this.pswd_length <= 20) {\n          console.log(this.pswd_length);\n          pwd += randomChar(Allowed.Uppercase);\n          pwd += randomChar(Allowed.Lowercase);\n          pwd += randomChar(Allowed.Numbers);\n          pwd += randomChar(Allowed.Symbols);\n\n          for (let i = pswd.length; i < length; i++) pwd += randomChar(Object.values(Allowed).join(''));\n\n          this.generatedPassword = pwd;\n        } else {\n          // console.log('blank');\n          this.generatedPassword = '';\n        }\n      };\n\n      generate(this.pswd_length);\n    }\n\n  },\n  computed: {\n    enablesubmit() {\n      if (this.name.length == 0 || this.email.length == 0 || this.pswd_length.length == 0 || this.generatedPassword.length == 0 || this.select.length == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgJA;AAEA;EACAA,gBADA;EAGAC;IACAC;EADA,CAHA;;EAMAC;IACA;MACAH,QADA;MAEAI,eAFA;MAGAC,2BAHA;MAIAC,SAJA;MAKAC,qBALA;MAMAC,UANA;MAOAC;QACAC,yCADA;QAEAC,2DAFA;QAGAL;UACA;UACA;QACA,CANA;QAOAN;UACA;UACA;QACA,CAVA;QAWAY;UACA;UACA;QACA;MAdA,CAPA;MAwBAC,OAxBA;MAyBAC,QACA,YADA,EAEA,QAFA,EAGA,QAHA,EAIA,WAJA,CAzBA;MA+BAC;IA/BA;EAkCA,CAzCA;;EA2CAC;IACAC;MACA;QACAC,uCADA;QAEAC,mCAFA;QAGAC,qBAHA;QAIAC;MAJA;;MAMA;;MACA;QACA;;QACA;UACAC;UACAC;UACAA;UACAA;UACAA;;UACA,2CACAA;;UACA;QACA,CATA,MAWA;UACA;UACA;QACA;MACA,CAjBA;;MAkBAC;IACA;;EA5BA,CA3CA;EAyEAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA;;EARA;AAzEA","names":["name","components","HelloWorld","data","pswd_length","title","email","generatedPassword","select","rules","required","counter","Password_length","row","items","selected","methods","pswd_generate","Uppercase","Lower","Numbers","Symbols","console","pwd","generate","computed","enablesubmit"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"div1\">\n    <v-col sm=\"9\">\n    <v-text-field\n            value=\"\"\n            v-model=\"name\"\n            label=\"Name\"\n            counter\n            maxlength=\"30\"\n            :rules=\"[rules.required, rules.name]\"\n            outlined\n          ></v-text-field>\n\n    <v-text-field\n            value=\"\"\n            v-model=\"email\"\n            label=\"Email\"\n            counter\n            maxlength=\"50\"\n            :rules=\"[rules.required, rules.email]\"\n            outlined\n          ></v-text-field>\n    </v-col>\n\n   <v-row>\n   <v-col sm=\"5\">\n   <v-text-field\n            value=\"\"\n            v-model=\"pswd_length\"\n            label=\"Password length\"\n            :rules=\"[rules.required,rules.Password_length]\"\n            outlined\n          ></v-text-field>\n\n    </v-col>\n    <v-col>\n     <v-btn @click=\"pswd_generate\"\n        depressed\n        color=\"primary\"\n      >Generate password</v-btn>\n    </v-col>\n    \n    </v-row>\n    \n    <v-col>\n    <v-text-field\n            value=''\n            v-model=\"generatedPassword\"\n            label=\"Generated Password\"\n            outlined\n            readonly\n          ></v-text-field>\n    </v-col>\n\n    \n    <v-container fluid>\n    <label>Gender:</label>\n    <v-radio-group\n     :rules=\"[rules.required]\"\n      v-model=\"row\"\n      row\n    >\n      <v-radio\n        label=\"Male\"\n        color=\"blue\"\n        value=\"radio-1\"\n      ></v-radio>\n      <v-radio\n        label=\"Female\"\n        color=\"pink lighten-2\"\n        value=\"radio-2\"\n      ></v-radio>\n    </v-radio-group>\n  </v-container>\n  \n  <label>Select address:</label>\n  <v-container fluid>\n    <v-row>\n      <v-col sm=\"9\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"State\"\n          single\n          outlined\n          dense\n          :rules=\"[rules.required]\"\n        ></v-combobox>\n      </v-col>\n    </v-row>\n  </v-container>\n  \n  <label>Hobbies:</label>\n   <v-container fluid>\n    <v-row>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Books\"\n        value=\"Books\"\n      ></v-checkbox>\n      </v-col>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Music\"\n        value=\"Music\"\n      ></v-checkbox>\n      </v-col>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Sports\"\n        value=\"Sports\"\n      ></v-checkbox>\n      </v-col>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Movies\"\n        value=\"Movies\"\n      ></v-checkbox>\n      </v-col>\n   </v-row>\n  </v-container>\n\n   <v-row>\n    <v-col></v-col>\n    <v-col>\n\n      <v-btn \n        :disabled=\"enablesubmit\"\n        color=\"green\"\n      >Submit</v-btn>\n    </v-col>\n    <v-col></v-col>\n    </v-row>\n\n  \n    <HelloWorld /> \n  </div> \n</template>\n\n<script>\n  import HelloWorld from '../components/HelloWorld'\n\n  export default {\n    name: 'HomeView',\n\n    components: {\n      HelloWorld,\n    },\n    data () {\n      return {\n        name: '',\n        pswd_length: '',\n        title: 'Preliminary report',\n        email: '',\n        generatedPassword: '',\n        select: '',\n        rules: {\n          required: value => !!value || 'Required.',\n          counter: value => value.length <= 30 || 'Max 30 characters',\n          email: value => {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            return pattern.test(value) || 'Invalid e-mail.'\n          },\n          name: value => {\n            const pattern = /^[a-zA-Z\\s]*$/\n            return pattern.test(value) || 'Invalid name'\n          },\n          Password_length: value => {\n            const pattern = /^([8-9]|1[0-9]|20)*$/\n            return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters'\n          },\n        \n        },\n        row:'',\n        items: [\n          'Tamil Nadu',\n          'Andhra',\n          'Kerala',\n          'Karnataka',\n        ],\n      selected: [''],\n      \n      } \n    },\n\n    methods: {\n      pswd_generate() {\n        const Allowed = {\n        Uppercase: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lower: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      }\n      const randomChar = (str) => str.charAt(Math.floor(Math.random() * str.length))\n      const generate = (length) => { \n        let pwd = \"\";\n        if(8<=this.pwd_length && this.pswd_length<=20){\n          console.log(this.pswd_length)\n        pwd += randomChar(Allowed.Uppercase);\n        pwd += randomChar(Allowed.Lowercase); \n        pwd += randomChar(Allowed.Numbers); \n        pwd += randomChar(Allowed.Symbols);\n        for (let i = pswd.length; i < length; i++)\n            pwd += randomChar(Object.values(Allowed).join(''));\n        this.generatedPassword = pwd ;\n        }\n        else\n        {\n          // console.log('blank');\n         this.generatedPassword = ''\n        }\n      }\n      generate(this.pswd_length )\n      }\n    },\n    computed:{\n      enablesubmit() {\n        if(this.name.length ==0 || this.email.length ==0 || this.pswd_length.length ==0 || this.generatedPassword.length ==0 || this.select.length ==0){\n          return true;\n        }\n        else{\n          return false\n          }\n        }\n    }\n  }\n</script>\n\n<style>\n  .div1 {\n  width:500px;\n  /* background-color: lightcyan; */\n  /* align-content: center;   */\n  margin:auto;\n  box-sizing: border-box;\n  border: solid black 1px;\n  padding: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}