{"ast":null,"code":"import HelloWorld from '../components/HelloWorld';\nexport default {\n  name: 'HomeView',\n  components: {\n    HelloWorld\n  },\n\n  data() {\n    return {\n      name: '',\n      pswd_length: '',\n      email: '',\n      generatedPassword: '',\n      isEdit: false,\n      rules: {\n        required: value => !!value || 'Required.',\n        counter: value => value.length <= 30 || 'Max 30 characters',\n        email: value => {\n          const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          return pattern.test(value) || 'Invalid e-mail.';\n        },\n        name: value => {\n          const pattern = /^[a-zA-Z\\s]*$/;\n          return pattern.test(value) || 'Invalid name';\n        },\n        Password_length: value => {\n          const pattern = /^([8-9]|1[0-9]|20)*$/;\n          return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters';\n        }\n      },\n      row: '',\n      items: ['Tamil Nadu', 'Andhra', 'Kerala', 'Karnataka'],\n      selected: [],\n      formData: []\n    };\n  },\n\n  methods: {\n    clearForm() {\n      this.name = \"\";\n      this.email = \"\";\n      this.select = \"\";\n      this.row = \"\";\n      this.selected = \"\";\n    },\n\n    pswd_generate() {\n      const Allowed = {\n        Uppers: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lowers: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      };\n\n      const randomChar = str => str.charAt(Math.floor(Math.random() * str.length));\n\n      const generate = (length = this.pswd_length) => {\n        let pwd = \"\";\n\n        if (8 <= this.pswd_length && this.pswd_length <= 20) {\n          pwd += randomChar(Allowed.Uppers);\n          pwd += randomChar(Allowed.Lowers);\n          pwd += randomChar(Allowed.Numbers);\n          pwd += randomChar(Allowed.Symbols);\n\n          for (let i = pwd.length; i < length; i++) pwd += randomChar(Object.values(Allowed).join(''));\n\n          this.generatedPassword = pwd;\n        } else {\n          this.generatedPassword = '';\n        }\n      };\n\n      generate();\n    },\n\n    submitdata() {\n      this.formData.push({\n        name: this.name,\n        email: this.email,\n        address: this.select,\n        gender: this.row,\n        hobbies: this.selected\n      });\n      this.clearForm();\n    },\n\n    deletedata(index) {\n      this.formData.splice(index, 1);\n    },\n\n    editData(index) {\n      console.log(this.formData[index].address);\n      this.name = this.formData[index].name;\n      this.email = this.formData[index].email;\n      this.select = this.formData[index].address;\n      this.row = this.formData[index].gender;\n      this.selected = this.formData[index].hobbies;\n      this.index = index;\n      this.isEdit = true;\n    },\n\n    updateData(index) {\n      this.formData[index].name = this.name;\n      this.formData[index].email = this.email;\n      this.formData[index].address = this.select;\n      this.formData[index].row = this.row;\n      this.formData[index].selected = this.selected;\n      this.isEdit = false;\n    }\n\n  },\n  computed: {\n    enablesubmit() {\n      if (this.name.length == 0 || this.email.length == 0 || this.pswd_length.length == 0 || this.generatedPassword.length == 0 || this.select.length == 0 || this.row == 0 || this.selected == 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  },\n  filters: {\n    truncate: function (text, length, suffix) {\n      if (text.length > length) {\n        return text.substring(0, length) + suffix;\n      } else {\n        return text;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAsOA;AAEA;EACAA,gBADA;EAGAC;IACAC;EADA,CAHA;;EAMAC;IACA;MACAH,QADA;MAEAI,eAFA;MAGAC,SAHA;MAIAC,qBAJA;MAKAC,aALA;MAOAC;QACAC,yCADA;QAEAC,2DAFA;QAGAL;UACA;UACA;QACA,CANA;QAOAL;UACA;UACA;QACA,CAVA;QAWAW;UACA;UACA;QACA;MAdA,CAPA;MAwBAC,OAxBA;MA0BAC,QACA,YADA,EAEA,QAFA,EAGA,QAHA,EAIA,WAJA,CA1BA;MAiCAC,YAjCA;MAkCAC;IAlCA;EAqCA,CA5CA;;EA8CAC;IACAC;MAEA;MACA;MACA;MACA;MACA;IACA,CARA;;IASAC;MACA;QACAC,oCADA;QAEAC,oCAFA;QAGAC,qBAHA;QAIAC;MAJA;;MAMA;;MACA;QACA;;QACA;UACAC;UACAA;UACAA;UACAA;;UACA,0CACAA;;UACA;QACA,CARA,MAUA;UACA;QACA;MAEA,CAhBA;;MAiBAC;IACA,CAnCA;;IAqCAC,aACA;MAEA;QAEAzB,eAFA;QAGAK,iBAHA;QAIAqB,oBAJA;QAKAC,gBALA;QAMAC;MANA;MASA;IACA,CAlDA;;IAoDAC,kBACA;MACA;IACA,CAvDA;;IA0DAC;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEA,CApEA;;IAsEAC;MAEA;MACA;MACA;MACA;MACA;MACA;IAEA;;EA/EA,CA9CA;EA+HAC;IACAC;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA;;EARA,CA/HA;EA0IAC;IACAC;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;IACA;EAPA;AA1IA","names":["name","components","HelloWorld","data","pswd_length","email","generatedPassword","isEdit","rules","required","counter","Password_length","row","items","selected","formData","methods","clearForm","pswd_generate","Uppers","Lowers","Numbers","Symbols","pwd","generate","submitdata","address","gender","hobbies","deletedata","editData","console","updateData","computed","enablesubmit","filters","truncate"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    \n    <v-container fluid>\n      <v-row>\n        <v-card\n    class=\"mx-auto\"\n    max-width=\"400\"\n    outlined\n    >\n       <v-col class=\"div1\" cols=\"4\">\n            <v-text-field\n              value=\"\"\n              v-model=\"name\"\n              label=\"Name\"\n              counter\n              maxlength=\"30\"\n              :rules=\"[rules.required, rules.name]\"\n              outlined\n            ></v-text-field>\n\n            <v-text-field\n              value=\"\"\n              v-model=\"email\"\n              label=\"Email\"\n              counter\n              maxlength=\"50\"\n              :rules=\"[rules.required, rules.email]\"\n              outlined\n            ></v-text-field>\n\n            <v-text-field\n              value=\"\"\n              v-model=\"email\"\n              label=\"Email\"\n              counter\n              maxlength=\"50\"\n              :rules=\"[rules.required, rules.email]\"\n              outlined\n            ></v-text-field>\n\n            <v-text-field\n              value=\"\"\n              v-model=\"email\"\n              label=\"Email\"\n              counter\n              maxlength=\"50\"\n              :rules=\"[rules.required, rules.email]\"\n              outlined\n            ></v-text-field>\n          \n          <!-- <v-row>\n            <v-col sm=\"9\">\n              <v-combobox\n                v-model=\"select\"\n                :items=\"items\"\n                label=\"Address\"\n                single\n                outlined\n                dense\n                :rules=\"[rules.required]\"\n              ></v-combobox>\n            </v-col>\n          </v-row>\n           -->\n          <!-- <v-row>\n            <v-col sm=\"5\">\n              <v-text-field\n              value=\"\"\n              v-model=\"pswd_length\"\n              label=\"Password size\"\n              :rules=\"[rules.required,rules.Password_length]\"\n              outlined\n              ></v-text-field>\n            </v-col> -->\n      \n            <!-- <v-col>\n              <v-btn @click=\"pswd_generate\"\n                depressed\n                color=\"primary\"\n                >Generate password</v-btn>\n            </v-col>\n          </v-row> -->\n      \n          \n              <!-- <v-text-field\n                value=''\n                v-model=\"generatedPassword\"\n                label=\"Generated Password\"\n                outlined\n                readonly\n                ></v-text-field> -->\n\n      \n         \n            <!-- <label>Gender:</label>\n              <v-radio-group\n                :rules=\"[rules.required]\"\n                v-model=\"row\"\n                row\n                >\n              <v-radio\n                label=\"Male\"\n                color=\"blue\"\n                value=\"Male\"\n              ></v-radio>\n              <v-radio\n                label=\"Female\"\n                color=\"pink lighten-2\"\n                value=\"Female\"\n              ></v-radio>\n              </v-radio-group>\n           -->\n    \n              \n          <!-- <label>Hobbies:</label>\n              <v-row>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Books\"\n                    value=\"Books\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Music\"\n                    value=\"Music\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Sports\"\n                    value=\"Sports\"\n                  ></v-checkbox>\n                </v-col>\n                <v-col>\n                  <v-checkbox\n                    v-model=\"selected\"\n                    label=\"Movies\"\n                    value=\"Movies\"\n                  ></v-checkbox>\n                </v-col>\n              </v-row> -->\n            \n          <v-row>\n            <v-col></v-col>\n            <v-col>\n\n            <v-btn v-if=\"!isEdit\" depressed color =\"primary\" v-on:click=\"submitdata()\">SUBMIT</v-btn>\n            <v-btn v-else depressed color =\"primary\" v-on:click=\"updateData(index)\">UPDATE</v-btn>\n            </v-col>\n            <v-col></v-col>\n          </v-row>\n          </v-col>\n    </v-card>     \n\n        \n        <v-col>\n          <v-simple-table class=\"table1\">\n              <template v-slot:default>\n                <thead>\n                  <tr>\n                    <th class=\"text-left\">\n                      id\n                    </th>\n                    <th class=\"text-left\">\n                      name\n                    </th>\n                    <th class=\"text-left\">\n                      email\n                    </th>\n                    <th class=\"text-left\">\n                      address\n                    </th>\n                    <th class=\"text-left\">\n                      gender\n                    </th>\n                    <th class=\"text-left\">\n                      hobbies\n                    </th>\n                    <th class=\"text-left\">\n                      action1\n                    </th>\n                    <th class=\"text-left\">\n                      action2\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                 <tr v-for=\"(item, index) in formData\" :key=\"index\">\n                  <th scope=\"row\">{{ index+1 }}</th>\n                    <td>{{ item.name | truncate(10, '...')}}</td>\n                    <td>{{ item.email }}</td>\n                    <td>{{ item.address }}</td>\n                    <td>{{ item.gender }}</td>\n                    <td>{{ item.hobbies }}</td>\n                    \n                    <td><v-btn\n                          depressed\n                          color=\"error\"\n                          @click=\"deletedata(index)\"\n                        >\n                          Delete\n                        </v-btn></td>\n\n                    <td><v-btn\n                          depressed\n                          color=\"success\"\n                          @click=\"editData(index)\"\n                        >\n                          Edit\n                        </v-btn></td>\n                  </tr>\n                </tbody>\n              </template>\n          </v-simple-table>\n    \n          <HelloWorld /> \n        </v-col>\n      </v-row>\n    </v-container>\n   \n  </div> \n</template>\n\n\n<script>\n  import HelloWorld from '../components/HelloWorld'\n\n  export default {\n    name: 'HomeView',\n\n    components: {\n      HelloWorld,\n    },\n    data () {\n      return {\n        name: '',\n        pswd_length: '',\n        email: '',\n        generatedPassword: '',\n        isEdit : false,\n        \n        rules: {\n          required: value => !!value || 'Required.',\n          counter: value => value.length <= 30 || 'Max 30 characters',\n          email: value => {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            return pattern.test(value) || 'Invalid e-mail.'\n          },\n          name: value => {\n            const pattern = /^[a-zA-Z\\s]*$/\n            return pattern.test(value) || 'Invalid name'\n          },\n          Password_length: value => {\n            const pattern = /^([8-9]|1[0-9]|20)*$/\n            return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters'\n          },\n        \n        },\n        row:'',\n        \n        items: [\n          'Tamil Nadu',\n          'Andhra',\n          'Kerala',\n          'Karnataka',\n        ],\n      \n      selected: [],\n      formData: [],\n          \n      } \n    },\n\n    methods: {\n      clearForm(){\n\n      this.name = \"\"\n      this.email = \"\"\n      this.select = \"\"\n      this.row = \"\"\n      this.selected = \"\"\n      },\n      pswd_generate() {\n        const Allowed = {\n        Uppers: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lowers: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      }\n      const randomChar = (str) => str.charAt(Math.floor(Math.random() * str.length))\n      const generate = (length=this.pswd_length) => { \n        let pwd = \"\";\n        if(8<=this.pswd_length && this.pswd_length<=20){\n        pwd += randomChar(Allowed.Uppers);\n        pwd += randomChar(Allowed.Lowers); \n        pwd += randomChar(Allowed.Numbers); \n        pwd += randomChar(Allowed.Symbols);\n        for (let i = pwd.length; i < length; i++)\n            pwd += randomChar(Object.values(Allowed).join(''));\n        this.generatedPassword = pwd;\n        }\n        else\n        {\n         this.generatedPassword = ''\n        }\n\n      }\n      generate()\n      },\n\n      submitdata()\n      {\n      \n        this.formData.push( {\n        \n            name:this.name,\n            email:this.email,\n            address:this.select,\n            gender:this.row,\n            hobbies:this.selected\n          \n      })\n      this.clearForm()\n    },\n\n    deletedata(index)\n      {\n      this.formData.splice(index, 1);\n      },\n\n\n    editData(index){\n       console.log(this.formData[index].address)\n      this.name = this.formData[index].name\n      this.email = this.formData[index].email\n      this.select = this.formData[index].address\n      this.row = this.formData[index].gender\n      this.selected = this.formData[index].hobbies\n      this.index = index\n      this.isEdit = true\n\n    },\n\n    updateData(index){\n    \n      this.formData[index].name = this.name\n      this.formData[index].email = this.email\n      this.formData[index].address = this.select\n      this.formData[index].row =  this.row\n      this.formData[index].selected = this.selected\n      this.isEdit = false\n\n    },\n},\n    computed:{\n      enablesubmit() {\n        if(this.name.length ==0 || this.email.length ==0 || this.pswd_length.length ==0 || this.generatedPassword.length ==0 || this.select.length ==0 || this.row ==0 || this.selected ==0){\n          return true;\n        }\n        else{\n          return false\n          }\n        }\n    },\n\n     filters: {\n        truncate: function (text, length, suffix) {\n            if (text.length > length) {\n                return text.substring(0, length) + suffix;\n            } else {\n                return text;\n            }\n        },\n    }\n  }\n</script>\n\n<style>\n  .div1 {\n    margin:10px;\n    /* box-sizing: border-box; */\n    border: solid black 1px;\n  }\n\n  .table1 {\n    width:auto;\n    height:auto;\n    margin:10px;\n    box-sizing: border-box;\n    border: solid black 1px;\n    padding: 10px;\n  }\n\n</style>"]},"metadata":{},"sourceType":"module"}