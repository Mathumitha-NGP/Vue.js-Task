{"ast":null,"code":"import HelloWorld from '../components/HelloWorld';\nexport default {\n  name: 'HomeView',\n  components: {\n    HelloWorld\n  },\n\n  data() {\n    return {\n      title: 'Preliminary report',\n      email: '',\n      rules: {\n        required: value => !!value || 'Required.',\n        counter: value => value.length <= 30 || 'Max 30 characters',\n        email: value => {\n          const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          return pattern.test(value) || 'Invalid e-mail.';\n        },\n        name: value => {\n          const pattern = /^[a-zA-Z\\s]*$/;\n          return pattern.test(value) || 'Invalid name';\n        },\n        Password_length: value => {\n          const pattern = /^([8-9]|1[0-9]|20)*$/;\n          return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters';\n        }\n      },\n      row: '',\n      items: ['Tamil Nadu', 'Andhra', 'Kerala', 'Karnataka'],\n      selected: ['']\n    };\n  },\n\n  methods: {\n    pswd_generate() {\n      const Allowed = {\n        Uppers: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lowers: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      };\n\n      const getRandomCharFromString = str => str.charAt(Math.floor(Math.random() * str.length));\n\n      const generate = length => {\n        let pwd = \"\";\n        pwd += getRandomCharFromString(Allowed.Uppers);\n        pwd += getRandomCharFromString(Allowed.Lowers);\n        pwd += getRandomCharFromString(Allowed.Numbers);\n        pwd += getRandomCharFromString(Allowed.Symbols);\n\n        for (let i = pwd.length; i < length; i++) pwd += getRandomCharFromString(Object.values(Allowed).join(''));\n\n        this.generatedPassword = pwd;\n      };\n\n      generate(this.pswd_length);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgJA;AAEA;EACAA,gBADA;EAGAC;IACAC;EADA,CAHA;;EAMAC;IACA;MACAC,2BADA;MAEAC,SAFA;MAGAC;QACAC,yCADA;QAEAC,2DAFA;QAGAH;UACA;UACA;QACA,CANA;QAOAL;UACA;UACA;QACA,CAVA;QAWAS;UACA;UACA;QAAA;MAbA,CAHA;MAkBAC,OAlBA;MAmBAC,QACA,YADA,EAEA,QAFA,EAGA,QAHA,EAIA,WAJA,CAnBA;MAyBAC;IAzBA;EA4BA,CAnCA;;EAqCAC;IACAC;MACA;QACAC,oCADA;QAEAC,oCAFA;QAGAC,qBAHA;QAIAC;MAJA;;MAMA;;MACA;QACA;QACAC;QACAA;QACAA;QACAA;;QACA,0CACAA;;QACA;MACA,CATA;;MAUAC;IACA;;EApBA;AArCA","names":["name","components","HelloWorld","data","title","email","rules","required","counter","Password_length","row","items","selected","methods","pswd_generate","Uppers","Lowers","Numbers","Symbols","pwd","generate"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"div1\">\n    <v-col sm=\"9\">\n    <v-text-field\n            value=\"\"\n            v-model=\"name\"\n            label=\"Name\"\n            counter\n            maxlength=\"30\"\n            :rules=\"[rules.required, rules.name]\"\n            outlined\n          ></v-text-field>\n\n    <v-text-field\n            value=\"\"\n            v-model=\"Email\"\n            label=\"Email\"\n            counter\n            maxlength=\"50\"\n            :rules=\"[rules.required, rules.email]\"\n            outlined\n          ></v-text-field>\n    </v-col>\n\n   <v-row>\n   <v-col sm=\"5\">\n   <v-text-field\n            value=\"\"\n            v-model=\"pswd_length\"\n            label=\"Password length\"\n            :rules=\"[rules.required,rules.Password_length]\"\n            outlined\n          ></v-text-field>\n\n    </v-col>\n    <v-col>\n     <v-btn @click=\"pswd_generate()\"\n        depressed\n        color=\"primary\"\n      >Generate password</v-btn>\n    </v-col>\n    \n    </v-row>\n    \n    <v-col>\n    <v-text-field\n            value=''\n            v-model=\"generatedPassword\"\n            label=\"Generated Password\"\n            outlined\n            readonly\n          ></v-text-field>\n    </v-col>\n\n    \n    <v-container fluid>\n    <label>Gender:</label>\n    <v-radio-group\n     :rules=\"[rules.required]\"\n      v-model=\"row\"\n      row\n    >\n      <v-radio\n        label=\"Male\"\n        color=\"blue\"\n        value=\"radio-1\"\n      ></v-radio>\n      <v-radio\n        label=\"Female\"\n        color=\"pink lighten-2\"\n        value=\"radio-2\"\n      ></v-radio>\n    </v-radio-group>\n  </v-container>\n  \n  <label>Select address:</label>\n  <v-container fluid>\n    <v-row>\n      <v-col sm=\"9\">\n        <v-combobox\n          v-model=\"select\"\n          :items=\"items\"\n          label=\"State\"\n          single\n          outlined\n          dense\n          :rules=\"[rules.required]\"\n        ></v-combobox>\n      </v-col>\n    </v-row>\n  </v-container>\n  \n  <label>Hobbies:</label>\n   <v-container fluid>\n    <v-row>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Books\"\n        value=\"Books\"\n      ></v-checkbox>\n      </v-col>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Music\"\n        value=\"Music\"\n      ></v-checkbox>\n      </v-col>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Sports\"\n        value=\"Sports\"\n      ></v-checkbox>\n      </v-col>\n      <v-col>\n      <v-checkbox\n        v-model=\"selected\"\n        label=\"Movies\"\n        value=\"Movies\"\n      ></v-checkbox>\n      </v-col>\n   </v-row>\n  </v-container>\n\n   <v-row>\n    <v-col></v-col>\n    <v-col>\n\n      <v-btn\n        depressed\n        color=\"green\"\n      >Disabled</v-btn>\n    </v-col>\n    <v-col></v-col>\n    </v-row>\n\n  \n    <HelloWorld /> \n  </div> \n</template>\n\n<script>\n  import HelloWorld from '../components/HelloWorld'\n\n  export default {\n    name: 'HomeView',\n\n    components: {\n      HelloWorld,\n    },\n    data () {\n      return {\n        title: 'Preliminary report',\n        email: '',\n        rules: {\n          required: value => !!value || 'Required.',\n          counter: value => value.length <= 30 || 'Max 30 characters',\n          email: value => {\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            return pattern.test(value) || 'Invalid e-mail.'\n          },\n          name: value => {\n            const pattern = /^[a-zA-Z\\s]*$/\n            return pattern.test(value) || 'Invalid name'\n          },\n          Password_length: value => {\n            const pattern = /^([8-9]|1[0-9]|20)*$/\n            return pattern.test(value) || 'Input must be number and Length must be 8 to 20 characters'}\n        },\n        row:'',\n        items: [\n          'Tamil Nadu',\n          'Andhra',\n          'Kerala',\n          'Karnataka',\n        ],\n      selected: [''],\n      \n      } \n    },\n\n    methods: {\n      pswd_generate() {\n        const Allowed = {\n        Uppers: \"QWERTYUIOPASDFGHJKLZXCVBNM\",\n        Lowers: \"qwertyuiopasdfghjklzxcvbnm\",\n        Numbers: \"1234567890\",\n        Symbols: \"!@#$%^&*\"\n      }\n      const getRandomCharFromString = (str) => str.charAt(Math.floor(Math.random() * str.length))\n      const generate = (length ) => { \n        let pwd = \"\";\n        pwd += getRandomCharFromString(Allowed.Uppers);\n        pwd += getRandomCharFromString(Allowed.Lowers); \n        pwd += getRandomCharFromString(Allowed.Numbers); \n        pwd += getRandomCharFromString(Allowed.Symbols);\n        for (let i = pwd.length; i < length; i++)\n            pwd += getRandomCharFromString(Object.values(Allowed).join(''));\n        this.generatedPassword = pwd ;\n      }\n      generate(this.pswd_length)\n}\n\n    }\n  }\n</script>\n\n<style>\n  .div1 {\n  width:500px;\n  background-color: violet;\n  /* align-content: center;   */\n  margin:auto;\n  box-sizing: border-box;\n  border: solid black 1px;\n  padding: 10px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}